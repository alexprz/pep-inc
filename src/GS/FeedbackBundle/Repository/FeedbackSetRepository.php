<?php

namespace GS\FeedbackBundle\Repository;

/**
 * FeedbackSetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FeedbackSetRepository extends \Doctrine\ORM\EntityRepository
{
    public function getSubmittedStats()
    {
        //Renvoie le nb de feedback remplis pour chacun des feedbacksSet ainsi que le nombre total
        //Indice 0 : nb feedback remplis par fbSet
        //Indice 1 : nb feedback total par fbSet
        $qb = $this->_em->createQueryBuilder();
        $qb ->select('COUNT(fbStd.responseDate), COUNT(fbStd)')
            ->from('GSFeedbackBundle:FeedbackSet', 'fbSet')
            ->leftJoin('fbSet.fbStudent', 'fbStd')
            ->groupBy('fbSet.id')
        ;
        $countStd = $qb->getQuery()->getResult();

        $qb = $this->_em->createQueryBuilder();
        $qb ->select('COUNT(fbClt.responseDate), COUNT(fbClt)')
            ->from('GSFeedbackBundle:FeedbackSet', 'fbSet')
            ->leftJoin('fbSet.fbClient', 'fbClt')
            ->groupBy('fbSet.id')
        ;
        $countClt = $qb->getQuery()->getResult();

        $qb = $this->_em->createQueryBuilder();
        $qb ->select('COUNT(fbCltD.responseDate), COUNT(fbCltD)')
            ->from('GSFeedbackBundle:FeedbackSet', 'fbSet')
            ->leftJoin('fbSet.fbClient_Denial', 'fbCltD')
            ->groupBy('fbSet.id')
        ;
        $countCltD = $qb->getQuery()->getResult();

        $n = count($countStd);
        $countSubmittedArray = array();
        $countAllArray = array();
        for ($i=0; $i < $n; $i++) {
            $totSubmitted = $countStd[$i][1]+$countClt[$i][1]+$countCltD[$i][1];
            $tot = $countStd[$i][2]+$countClt[$i][2]+$countCltD[$i][2];
            array_push($countSubmittedArray, $totSubmitted);
            array_push($countAllArray, $tot);
        }

        return array(
            0 => $countSubmittedArray,
            1 => $countAllArray
        );
    }
}
