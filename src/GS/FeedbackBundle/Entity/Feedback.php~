<?php
namespace GS\FeedbackBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * @ORM\Table(name="gs_feedback")
 * @ORM\Entity(repositoryClass="GS\FeedbackBundle\Repository\FeedbackRepository")
 * @ORM\InheritanceType("JOINED")
 * @ORM\DiscriminatorColumn(name="discr", type="string")
 * @ORM\DiscriminatorMap({"fb_student" = "FbStudent", "fb_client" = "FbClient", "fb_client_denial" = "FbClient_Denial"})
 */

abstract class Feedback
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
      * @ORM\Column(name="creation_date", type="date")
      */
    protected $creationDate;

    /**
      * @ORM\Column(name="response_date", type="date", nullable=true)
      */
    protected $responseDate;

    /**
     * @ORM\OneToOne(targetEntity="Token", mappedBy="feedback", cascade={"persist"})
     * @ORM\JoinColumn(nullable=true)
     */
    protected $token;

    /**
     * @ORM\ManyToOne(targetEntity="GS\UserBundle\Entity\User")
     * @ORM\JoinColumn(nullable=false)
     */
    private $user;

      public function __construct()
      {
          $this->creationDate = new \DateTime("now", new \DateTimeZone("EUROPE/Paris"));
      }

      public function isSubmitted()
      {
          return $this->responseDate != null;
      }

      public function stringState()
      {
            if($this->isSubmitted())
                return "Rempli";
            else
                return "Non rempli";
      }

    /**
     * Get id.
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set creationDate.
     *
     * @param \DateTime $creationDate
     *
     * @return Feedback
     */
    public function setCreationDate($creationDate)
    {
        $this->creationDate = $creationDate;

        return $this;
    }

    /**
     * Get creationDate.
     *
     * @return \DateTime
     */
    public function getCreationDate()
    {
        return $this->creationDate;
    }

    /**
     * Set responseDate.
     *
     * @param \DateTime|null $responseDate
     *
     * @return Feedback
     */
    public function setResponseDate($responseDate = null)
    {
        $this->responseDate = $responseDate;

        return $this;
    }

    /**
     * Get responseDate.
     *
     * @return \DateTime|null
     */
    public function getResponseDate()
    {
        return $this->responseDate;
    }

    /**
     * Set token.
     *
     * @param \GS\FeedbackBundle\Entity\Token|null $token
     *
     * @return Feedback
     */
    public function setToken(\GS\FeedbackBundle\Entity\Token $token = null)
    {
        $this->token = $token;

        return $this;
    }

    /**
     * Get token.
     *
     * @return \GS\FeedbackBundle\Entity\Token|null
     */
    public function getToken()
    {
        return $this->token;
    }
}
