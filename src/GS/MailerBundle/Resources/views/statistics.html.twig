{% extends 'GSMailerBundle::layout.html.twig' %}

{% block stylesheet %}
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
{% endblock %}

{% block body %}
    <h1>Statistiques</h1>

    <input type="button" name="" value="Refresh" id="refreshButton">
    <input type="button" name="" value="Refresh from zero" id="refreshFromZeroButton">

    <br><br>

    <h2><span id="numberOfMails">0</span> mails</h2>

    <div id="tester" style="width:600px;height:250px;"></div>

    <canvas id="myLineChart" width="400" height="400"></canvas>
    <canvas id="myChart" width="400" height="400"></canvas>

{% endblock %}

{% block scripts %}
    {{ parent() }}

    <script type="text/javascript">

        var stats;
        var delay = 5;

        function refresh()
        {
            // $('#numberMails').animateNumber(stats.numberMails);
            setNumber('#numberOfMails', stats.numberOfMails);
        }
        function refreshFromZero()
        {
            $('#numberOfMails').html('0');
            refresh();
        }

        function setNumber(identifier, number)
        {
            jQuery({ Counter: $(identifier).text() }).animate({ Counter: number }, {
              duration: 1000,
              easing: 'swing',
              step: function () {
                $(identifier).text(Math.ceil(this.Counter));
              }
            });
        }


        function loadStats()
        {
            $.ajax({
                type: 'POST',
                url: "{{ path("gs_mailer_dumpStats") }}",
                data: {},
                dataType: "json",
                success: function(data){
                    stats = data;
                    refresh();
                    showGraph();
                }
            });
        }
        loadStats();

        $("#refreshButton").click(function () {
            loadStats();
            refresh();
        });

        $("#refreshFromZeroButton").click(function () {
            loadStats();
            refreshFromZero();
        });

        function showGraph(){

        var echantillon = {
            "2013-10-04": 51,
            "2013-10-11": 45,
            "2013-10-20": 6,
            "2013-10-23": 3,
            "2013-10-28": 78,
        }

        var X = [];
        var Y = [];
        var Y0 = [];
        var max = 0;

        for (var date in echantillon){
            X.push(date);
            Y.push(echantillon[date]);
            Y0.push(0);
            if (max < echantillon[date]) {
                max = echantillon[date];
            }
        }

        var Y1 = [];
        Array.apply(Y1, {length: Y.length}).map(Number.prototype.valueOf,0);
        var n = Y.length;
        var current = stats.numberOfMails;
        for (var i = 0; i < n; i++) {
            Y1[n-i-1] = current;
            current -= Y[n-i-1];
        }


    	Plotly.plot( 'tester', [{
        	x: X,
        	y: Y0,
            line: {simplify: false}
            }], {
        	margin: { t: 0 },
            yaxis: {range: [0, Y1[n-1]]} }
        );

        Plotly.animate('tester', {
            data: [{y: Y1}],
            traces: [0],
            layout: {
              yaxis: {range: [0, Y1[n-1]]}
            }
          }, {
            transition: {
              duration: 500,
              easing: 'cubic-in-out'
            }
          })

        }

    </script>
    <script>
var ctx = document.getElementById("myLineChart").getContext('2d');
// var myChart = new Chart(ctx, {
//     type: 'bar',
//     data: {
//         labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
//         datasets: [{
//             label: '# of Votes',
//             data: [12, 19, 3, 5, 2, 3],
//             backgroundColor: [
//                 'rgba(255, 99, 132, 0.2)',
//                 'rgba(54, 162, 235, 0.2)',
//                 'rgba(255, 206, 86, 0.2)',
//                 'rgba(75, 192, 192, 0.2)',
//                 'rgba(153, 102, 255, 0.2)',
//                 'rgba(255, 159, 64, 0.2)'
//             ],
//             borderColor: [
//                 'rgba(255,99,132,1)',
//                 'rgba(54, 162, 235, 1)',
//                 'rgba(255, 206, 86, 1)',
//                 'rgba(75, 192, 192, 1)',
//                 'rgba(153, 102, 255, 1)',
//                 'rgba(255, 159, 64, 1)'
//             ],
//             borderWidth: 1
//         }]
//     },
//     options: {
//         scales: {
//             yAxes: [{
//                 ticks: {
//                     beginAtZero:true
//                 }
//             }]
//         }
//     }
// });
var myLineChart = new Chart(ctx, {
        type: 'pie',
        data: {
            datasets: [{
                data: [10, 20, 30]
            }],

            // These labels appear in the legend and in the tooltips when hovering different arcs
            labels: [
                'Red',
                'Yellow',
                'Blue'
            ]
        },
        option: {
            color: [
                'red',    // color for data at index 0
                'blue',   // color for data at index 1
                'green'
            ]
        }
});
</script>
{% endblock %}
